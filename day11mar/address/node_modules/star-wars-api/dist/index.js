'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _request = require('request');

var _request2 = _interopRequireDefault(_request);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _utilsJs = require('./utils.js');

var Swapi = (function () {
    function Swapi(stub) {
        _classCallCheck(this, Swapi);

        this.baseUrl = 'http://swapi.co/api/';
        this.request = stub || _request2['default'];
    }

    _createClass(Swapi, [{
        key: 'describe',
        value: function describe() {
            return this._end(this.baseUrl);
        }
    }, {
        key: 'get',
        value: function get(resource, id) {
            var _this = this;

            if (Array.isArray(id)) {
                return _bluebird2['default'].all(id.map(function (elem) {
                    return _this.get(resource, elem);
                }));
            }
            if (/^http/.test(resource)) {
                return this._end(resource);
            }
            if (id === undefined) {
                return this._buildQuery(resource);
            }

            return this._buildQuery(resource, id).bind(this).then(this._end);
        }
    }, {
        key: '_buildQuery',
        value: function _buildQuery(resource, id) {
            if (arguments.length < 2) {
                return _bluebird2['default'].reject(new Error('id argument is required'));
            }
            var query = (0, _utilsJs.urlJoin)(this.baseUrl, resource, id);
            return _bluebird2['default'].resolve(query);
        }
    }, {
        key: 'schema',
        value: function schema(resource) {
            return this._end((0, _utilsJs.urlJoin)(this.baseUrl, resource, 'schema'));
        }
    }, {
        key: '_end',
        value: function _end(query) {
            var _this2 = this;

            return new _bluebird2['default'](function (resolve, reject) {
                _this2.request.get(query, function (err, res, body) {
                    if (res.statusCode !== 200) {
                        var e = new Error(res.statusCode);
                        return reject(e);
                    }

                    if (err) {
                        return reject(err);
                    }

                    return resolve(JSON.parse(body));
                });
            });
        }
    }], [{
        key: '_listResources',
        value: function _listResources() {
            return ['people', 'films', 'starships', 'vehicles', 'species', 'planets'];
        }
    }]);

    return Swapi;
})();

(0, _utilsJs.extend)(Swapi.prototype, Swapi._listResources().reduce(function (obj, item) {
    obj[item] = function (id) {
        return this.get(item, id);
    };
    return obj;
}, {}));

exports['default'] = Swapi;
module.exports = exports['default'];